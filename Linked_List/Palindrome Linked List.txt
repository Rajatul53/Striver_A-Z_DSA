/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        StringBuilder s = new StringBuilder();
        while(head!=null){
            s.append(head.val);
            head = head.next;
        }
        return isPalindromeString(s.toString());
    }
    public static boolean isPalindromeString(String s) {
    int n = s.length();

    for (int i = 0; i < (n/2); i++) {
        if (s.charAt(i) != s.charAt(n - i - 1))
            return false;
    }

    return true;
}
}